variables:
  DOCKER_IMAGE: '$IMAGE_URL'
image: '$DOCKER_IMAGE'
stages:
  - prepare
  - lint
  - test
  - validate
  - deploy
  - release

prepare composer:
  stage: prepare
  variables:
    COMPOSER_CACHE_DIR: '.cache/composer'
  script:
    - composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader --no-dev
  cache:
    key: composer-cache
    paths:
      - .composer-cache
    policy: pull-push

lint php-parallel-lint:
  stage: lint
  needs: ['prepare composer']
  script:
    - ./vendor/bin/parallel-lint --exclude vendor/ .

lint php-cs-fixer:
  stage: lint
  needs: ['prepare composer']
  script:
    - ./vendor/bin/php-cs-fixer fix -v --dry-run --using-cache=no

lint phpstan:
  stage: lint
  needs: ['prepare composer']
  script:
    - ./vendor/bin/phpstan --no-progress --memory-limit="2G" --error-format=gitlab > phpstan-report.json || (cat phpstan-report.json && exit 1)

lint composer:
  stage: lint
  needs: []
  script:
    - composer validate --no-interaction --strict

lint secretsscan:
  image: '$IMAGE_URL_PYTHON'
  stage: lint
  needs: []
  script:
    - ci/scan_secrets.sh

test phpunit:
  image: '$IMAGE_URL_PYTHON'
  stage: lint
  needs: ['prepare composer']
  variables:
    PHP_XDEBUG: "1"
    XDEBUG_MODE: coverage
  script:
    - ./vendor/bin/phpunit --coverage-text --testdox
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    when: always
    paths:
      - build
    expire_in: 1 day
    reports:
      junit: build/logs/junit.xml
      cobertura: build/cobertura.xml

validate tag-message:
  stage: validate
  needs: []
  only:
    - tags
  script:
    - ci/validate_tag_message.sh $CI_COMMIT_TAG

validate tag-version-consistency:
  stage: validate
  needs: []
  only:
    - tags
  script:
    - composer dump-autoload
    - php ci/ValidateTagVersionConsistency.php $CI_COMMIT_TAG

deploy deploy-to-github:
  stage: deploy
  only:
    - tags
  script:
    - ci/deploy_to_github.sh

release release-to-github:
  image: '$IMAGE_URL_PYTHON'
  stage: release
  only:
    - tags
  script:
    - ci/release_to_github.sh $CI_COMMIT_TAG
