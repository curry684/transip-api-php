variables:
  DOCKER_IMAGE: '$IMAGE_URL'
image: '$DOCKER_IMAGE'
stages:
  - lint
  - validate
  - deploy
  - release

lint:php:
  stage: lint
  before_script:
    - composer install
  script:
    - ./vendor/bin/parallel-lint --exclude vendor/ .

lint:php-codestyle:
  stage: lint
  before_script:
    - composer install
  script:
    - ./vendor/bin/php-cs-fixer fix -v --dry-run --using-cache=no

lint:php-stan:
  stage: lint
  before_script:
    - composer install
  script:
    - ./vendor/bin/phpstan --no-progress --memory-limit="2G" --error-format=gitlab > phpstan-report.json || (cat phpstan-report.json && exit 1)
  artifacts:
    when: always
    reports:
      codequality: phpstan-report.json

lint:composer:
  stage: lint
  script:
    - composer validate --no-interaction --strict

lint:secretsscan:
  image: '$IMAGE_URL_PYTHON'
  stage: lint
  script:
    - ci/scan_secrets.sh

validate:tag-message:
  stage: validate
  only:
    - tags
  script:
    - ci/validate_tag_message.sh $CI_COMMIT_TAG

validate:tag-version-consistency:
  stage: validate
  only:
    - tags
  script:
    - composer dump-autoload
    - php ci/ValidateTagVersionConsistency.php $CI_COMMIT_TAG

deploy:deploy-to-github:
  stage: deploy
  only:
    - tags
  script:
    - ci/deploy_to_github.sh

release:release-to-github:
  image: '$IMAGE_URL_PYTHON'
  stage: release
  only:
    - tags
  script:
    - ci/release_to_github.sh $CI_COMMIT_TAG
